(function(e,a){if("function"==typeof define&&define.amd)define(["exports"],a);else if("undefined"!=typeof exports)a(exports);else{var r={exports:{}};a(r.exports),e.unknown=r.exports}})(this,function(e){"use strict";function a(e,a){for(var r,o=0;o<a.length;o++)r=a[o],r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}function r(e,r,o){return r&&a(e.prototype,r),o&&a(e,o),e}function o(e,a){if(!_(e,a))throw new TypeError("Cannot call a class as a function")}function i(e){return u(e)||n(e)||t()}function t(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function n(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function u(e){if(Array.isArray(e)){for(var a=0,r=Array(e.length);a<e.length;a++)r[a]=e[a];return r}}function l(e,a,r,o,i,t,n){try{var u=e[t](n),l=u.value}catch(e){return void r(e)}u.done?a(l):Promise.resolve(l).then(o,i)}function d(e){return function(){var a=this,r=arguments;return new Promise(function(o,i){function t(e){l(u,o,i,t,n,"next",e)}function n(e){l(u,o,i,t,n,"throw",e)}var u=e.apply(a,r);t(void 0)})}}function _(e,a){return null!=a&&"undefined"!=typeof Symbol&&a[Symbol.hasInstance]?!!a[Symbol.hasInstance](e):e instanceof a}function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,!function(e){function a(e,a,r,i){var t=a&&_(a.prototype,o)?a:o,n=Object.create(t.prototype),u=new c(i||[]);return n._invoke=l(e,r,u),n}function r(e,a,r){try{return{type:"normal",arg:e.call(a,r)}}catch(e){return{type:"throw",arg:e}}}function o(){}function i(){}function t(){}function n(e){["next","throw","return"].forEach(function(a){e[a]=function(e){return this._invoke(a,e)}})}function u(e){function a(o,i,t,n){var u=r(e[o],e,i);if("throw"===u.type)n(u.arg);else{var l=u.arg,d=l.value;return d&&"object"===p(d)&&M.call(d,"__await")?Promise.resolve(d.__await).then(function(e){a("next",e,t,n)},function(e){a("throw",e,t,n)}):Promise.resolve(d).then(function(e){l.value=e,t(l)},function(e){return a("throw",e,t,n)})}}function o(e,r){function o(){return new Promise(function(o,i){a(e,r,o,i)})}return i=i?i.then(o,o):o()}var i;this._invoke=o}function l(e,a,o){var i="suspendedStart";return function(t,n){if(i==="executing")throw new Error("Generator is already running");if("completed"===i){if("throw"===t)throw n;return E()}for(o.method=t,o.arg=n;;){var u=o.delegate;if(u){var l=d(u,o);if(l){if(l===v)continue;return l}}if("next"===o.method)o.sent=o._sent=o.arg;else if("throw"===o.method){if("suspendedStart"===i)throw i="completed",o.arg;o.dispatchException(o.arg)}else"return"===o.method&&o.abrupt("return",o.arg);i="executing";var _=r(e,a,o);if("normal"===_.type){if(i=o.done?"completed":"suspendedYield",_.arg===v)continue;return{value:_.arg,done:o.done}}"throw"===_.type&&(i="completed",o.method="throw",o.arg=_.arg)}}}function d(e,a){var o=e.iterator[a.method];if(void 0===o){if(a.delegate=null,"throw"===a.method){if(e.iterator.return&&(a.method="return",a.arg=void 0,d(e,a),"throw"===a.method))return v;a.method="throw",a.arg=new TypeError("The iterator does not provide a 'throw' method")}return v}var i=r(o,e.iterator,a.arg);if("throw"===i.type)return a.method="throw",a.arg=i.arg,a.delegate=null,v;var t=i.arg;if(!t)return a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,v;if(t.done)a[e.resultName]=t.value,a.next=e.nextLoc,"return"!==a.method&&(a.method="next",a.arg=void 0);else return t;return a.delegate=null,v}function s(e){var a={tryLoc:e[0]};1 in e&&(a.catchLoc=e[1]),2 in e&&(a.finallyLoc=e[2],a.afterLoc=e[3]),this.tryEntries.push(a)}function y(e){var a=e.completion||{};a.type="normal",delete a.arg,e.completion=a}function c(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(s,this),this.reset(!0)}function m(e){if(e){var a=e[P];if(a)return a.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var r=-1,o=function a(){for(;++r<e.length;)if(M.call(e,r))return a.value=e[r],a.done=!1,a;return a.value=void 0,a.done=!0,a};return o.next=o}}return{next:E}}function E(){return{value:void 0,done:!0}}var A=Object.prototype,M=A.hasOwnProperty,f="function"==typeof Symbol?Symbol:{},P=f.iterator||"@@iterator",D=f.asyncIterator||"@@asyncIterator",L=f.toStringTag||"@@toStringTag",O="object"===("undefined"==typeof module?"undefined":p(module)),h=e.regeneratorRuntime;if(h)return void(O&&(module.exports=h));h=e.regeneratorRuntime=O?module.exports||{}:{},h.wrap=a;var v={},b={};b[P]=function(){return this};var N=Object.getPrototypeOf,Y=N&&N(N(m([])));Y&&Y!==A&&M.call(Y,P)&&(b=Y);var w=t.prototype=o.prototype=Object.create(b);i.prototype=w.constructor=t,t.constructor=i,t[L]=i.displayName="GeneratorFunction",h.isGeneratorFunction=function(e){var a="function"==typeof e&&e.constructor;return!!a&&(a===i||"GeneratorFunction"===(a.displayName||a.name))},h.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,t):(e.__proto__=t,!(L in e)&&(e[L]="GeneratorFunction")),e.prototype=Object.create(w),e},h.awrap=function(e){return{__await:e}},n(u.prototype),u.prototype[D]=function(){return this},h.AsyncIterator=u,h.async=function(e,r,o,i){var t=new u(a(e,r,o,i));return h.isGeneratorFunction(r)?t:t.next().then(function(e){return e.done?e.value:t.next()})},n(w),w[L]="Generator",w[P]=function(){return this},w.toString=function(){return"[object Generator]"},h.keys=function(e){var a=[];for(var r in e)a.push(r);return a.reverse(),function r(){for(;a.length;){var o=a.pop();if(o in e)return r.value=o,r.done=!1,r}return r.done=!0,r}},h.values=m,c.prototype={constructor:c,reset:function reset(e){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(y),!e)for(var a in this)"t"===a.charAt(0)&&M.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=void 0)},stop:function stop(){this.done=!0;var e=this.tryEntries[0],a=e.completion;if("throw"===a.type)throw a.arg;return this.rval},dispatchException:function dispatchException(e){function a(a,o){return n.type="throw",n.arg=e,r.next=a,o&&(r.method="next",r.arg=void 0),!!o}if(this.done)throw e;for(var r=this,o=this.tryEntries.length-1;0<=o;--o){var t=this.tryEntries[o],n=t.completion;if("root"===t.tryLoc)return a("end");if(t.tryLoc<=this.prev){var u=M.call(t,"catchLoc"),l=M.call(t,"finallyLoc");if(u&&l){if(this.prev<t.catchLoc)return a(t.catchLoc,!0);if(this.prev<t.finallyLoc)return a(t.finallyLoc)}else if(u){if(this.prev<t.catchLoc)return a(t.catchLoc,!0);}else if(!l)throw new Error("try statement without catch or finally");else if(this.prev<t.finallyLoc)return a(t.finallyLoc)}}},abrupt:function abrupt(e,a){for(var r,o=this.tryEntries.length-1;0<=o;--o)if(r=this.tryEntries[o],r.tryLoc<=this.prev&&M.call(r,"finallyLoc")&&this.prev<r.finallyLoc){var t=r;break}t&&("break"===e||"continue"===e)&&t.tryLoc<=a&&a<=t.finallyLoc&&(t=null);var n=t?t.completion:{};return n.type=e,n.arg=a,t?(this.method="next",this.next=t.finallyLoc,v):this.complete(n)},complete:function complete(e,a){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&a&&(this.next=a),v},finish:function finish(e){for(var a,r=this.tryEntries.length-1;0<=r;--r)if(a=this.tryEntries[r],a.finallyLoc===e)return this.complete(a.completion,a.afterLoc),y(a),v},catch:function _catch(e){for(var a,r=this.tryEntries.length-1;0<=r;--r)if(a=this.tryEntries[r],a.tryLoc===e){var o=a.completion;if("throw"===o.type){var t=o.arg;y(a)}return t}throw new Error("illegal catch attempt")},delegateYield:function delegateYield(e,a,r){return this.delegate={iterator:m(e),resultName:a,nextLoc:r},"next"===this.method&&(this.arg=void 0),v}}}(function(){return this||"object"===("undefined"==typeof self?"undefined":p(self))&&self}()||Function("return this")());var s={debug:["audio_player_rj25.audioplayer_init","audio_player_rj25.audioplayer_play_by_sn","audio_player_rj25.audioplayer_play_by_name","audio_player_rj25.audioplayer_set_play_mode","audio_player_rj25.audioplayer_play_previous","audio_player_rj25.audioplayer_play_next","audio_player_rj25.audioplayer_pause","audio_player_rj25.audioplayer_stop","audio_player_rj25.audioplayer_set_volume","audio_player_rj25.audioplayer_volume_up","audio_player_rj25.audioplayer_volume_down","audio_player_rj25.audioplayer_record","audio_player_rj25.audioplayer_record_stop"],upload:[]},y=[],c=function(){var e=d(regeneratorRuntime.mark(function e(a,r){var o,t,n,u,l,d,_,p,c;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(e.prev=0,!(r&&r.workspace)){e.next=8;break}return"debug"===a?((o=r.workspace).enableBlocks.apply(o,i(s.upload)),(t=r.workspace).disableBlocks.apply(t,i(s.debug))):"upload"===a?((n=r.workspace).enableBlocks.apply(n,i(s.debug)),(u=r.workspace).disableBlocks.apply(u,i(s.upload))):((l=r.workspace).enableBlocks.apply(l,i(s.upload)),(d=r.workspace).enableBlocks.apply(d,i(s.debug))),_=r.getService("account"),e.next=6,_.isLogin();case 6:p=e.sent,p||(c=r.workspace).disableBlocks.apply(c,y);case 8:e.next=13;break;case 10:e.prev=10,e.t0=e["catch"](0);case 13:case"end":return e.stop();}},e,null,[[0,10]])}));return function(){return e.apply(this,arguments)}}(),m={zh:{audio_player_rj25:"\u97F3\u9891\u64AD\u653E\u6A21\u5757",extensionName:"\u97F3\u9891\u64AD\u653E\u6A21\u5757",extensionDescription:"\u97F3\u9891\u64AD\u653E\u6A21\u5757",audioplayer_init:"\u521D\u59CB\u5316\u97F3\u9891\u64AD\u653E\u6A21\u5757\u4F4D\u4E8E\uFF1A\u4EFB\u610F\u767D\u8272\u63A5\u53E3\uFF08I2C\uFF09",audioplayer_play_by_sn:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u64AD\u653E\u7B2C [FILE_SN] \u9996\u97F3\u9891",audioplayer_play_by_name:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u64AD\u653E\u540D\u79F0\u4E3A [FILE_NAME]  \u7684\u97F3\u9891",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\u5355\u66F2\u64AD\u653E",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u5355\u66F2\u5FAA\u73AF",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u987A\u5E8F\u5FAA\u73AF",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\u968F\u673A\u64AD\u653E",audioplayer_set_play_mode:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u8BBE\u7F6E\u64AD\u653E\u6A21\u5F0F\u4E3A [PLAY_MODE]",audioplayer_play_previous:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u64AD\u653E\u4E0A\u4E00\u9996\u97F3\u9891",audioplayer_play_next:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u64AD\u653E\u4E0B\u4E00\u9996\u97F3\u9891",audioplayer_pause:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u6682\u505C/\u6062\u590D\u64AD\u653E",audioplayer_stop:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u505C\u6B62\u64AD\u653E",audioplayer_set_volume:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u8BBE\u7F6E\u97F3\u91CF\u4E3A [VOLUME] %",audioplayer_volume_up:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u97F3\u91CF\u589E\u52A0",audioplayer_volume_down:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u97F3\u91CF\u51CF\u5C0F",audioplayer_record:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u5F00\u59CB\u5F55\u97F3\u81F3\u6587\u4EF6 [FILE_NAME]",audioplayer_record_stop:"\u97F3\u9891\u64AD\u653E\u6A21\u5757\uFF1A\u505C\u6B62\u5F55\u97F3"},en:{audio_player_rj25:"Audio Player",extensionName:"Audio Player",audioplayer_init:"initialize audio player at: any white port (I2C)",audioplayer_play_by_name:"audio player: play the  audio file named [FILE_NAME]",audioplayer_record_stop:"audio player: stop recording",audioplayer_record:"audio player: start recording and save to [FILE_NAME]",audioplayer_volume_down:"audio player: volume down",audioplayer_volume_up:"audio player: volume up",audioplayer_set_volume:"audio player: set volume to [VOLUME] %",audioplayer_stop:"audio player: stop playing",audioplayer_play_by_sn:"audio player: play the [FILE_SN] audio file",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"single",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"loop",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"order",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"shuffle",audioplayer_set_play_mode:"audio player: set mode to [PLAY_MODE]",audioplayer_play_previous:"audio player: play previous audio file",audioplayer_play_next:"audio player: play next audio file",audioplayer_pause:"audio player: pause/continue",extensionDescription:"Audio Player"},de:{audio_player_rj25:"Audio Player",extensionName:"Audio Player",extensionDescription:"Audio Player",audioplayer_init:"Initialisieren Sie den Audio-Player an: Jede wei\xDFe Portierung (I2C)",audioplayer_play_by_sn:"audio player: Spielen Sie die [FILE_SN] Audiodatei",audioplayer_play_by_name:"audio player: Abspielen der Audio-Datei namens [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"Einzelnen",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"Schleife",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"Um",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"Shuffle",audioplayer_set_play_mode:"audio player: Seting-Modus auf [PLAY_MODE]",audioplayer_play_previous:"audio player: Vorige Audio-Datei abspielen",audioplayer_play_next:"audio player: Abspielen der n\xE4chsten Audio-Datei",audioplayer_pause:"audio player: Pause/weiter",audioplayer_stop:"audio player: H\xF6ren Sie auf zu spielen",audioplayer_set_volume:"audio player: Einstellung der Lautst\xE4rke [VOLUME] %",audioplayer_volume_up:"audio player: Volumen nach oben",audioplayer_volume_down:"audio player: Lautst\xE4rke nach unten",audioplayer_record:"audio player: Aufnahme starten und speichern, um [FILE_NAME]",audioplayer_record_stop:"audio player: Stopp-Aufnahme"},es:{audio_player_rj25:"Reproductor de audio",extensionName:"Reproductor de audio",extensionDescription:"Audio Player",audioplayer_init:"inicializa el reproductor de audio en: cualquier puerto blanco (I2C)",audioplayer_play_by_sn:"reproductor de audio: reproduce el archivo de audio [FILE_SN]",audioplayer_play_by_name:"reproductor de audio: reproduce el archivo de audio [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"solo uno",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"en bucle",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"en orden",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"Shuffle",audioplayer_set_play_mode:"reproductor de audio: modo de reproducci\xF3n [PLAY_MODE]",audioplayer_play_previous:"reproductor de audio: reproduce archivo de audio anterior",audioplayer_play_next:"reproductor de audio: reproduce el archivo de audio siguiente",audioplayer_pause:"reproductor de audio: pausa/continua",audioplayer_stop:"reproductor de audio: para",audioplayer_set_volume:"reproductor de audio: fija el volumen a [VOLUME] %",audioplayer_volume_up:"reproductor de audio: sube volumen",audioplayer_volume_down:"reproductor de audio: baja volumen",audioplayer_record:"reproductor de audio: inicia la grabaci\xF3n y gu\xE1rdala en [FILE_NAME]",audioplayer_record_stop:"reproductor de audio: para la grabaci\xF3n"},fr:{audio_player_rj25:"Lecteur audio",extensionName:"Lecteur audio",extensionDescription:"Audio Player",audioplayer_init:"initialiser le lecteur audio \xE0: n'importe quel port blanc (I2C)",audioplayer_play_by_sn:"lecteur audio: jouer le fichier audio [FILE_SN]",audioplayer_play_by_name:"lecteur audio: lire le fichier audio nomm\xE9 [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"simple",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"boucle",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"dans l'ordre",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"al\xE9atoire",audioplayer_set_play_mode:"lecteur audio : r\xE9gler le mode sur [PLAY_MODE]",audioplayer_play_previous:"lecteur audio: lire le fichier audio pr\xE9c\xE9dent",audioplayer_play_next:"lecteur audio: lire le fichier audio suivant",audioplayer_pause:"lecteur audio: pause/reprise",audioplayer_stop:"lecteur audio: arr\xEAter la lecture",audioplayer_set_volume:"lecteur audio: volume \xE0 [VOLUME] %",audioplayer_volume_up:"lecteur audio: monter le volume",audioplayer_volume_down:"lecteur audio: baisser le volume",audioplayer_record:"lecteur audio: d\xE9marrer l'enregistrement et [FILE_NAME]",audioplayer_record_stop:"lecteur audio: arr\xEAter l'enregistrement"},id:{audio_player_rj25:"Audio Player",extensionName:"Audio Player",extensionDescription:"Audio Player",audioplayer_init:"menginisialisasi pemutar audio di: setiap putih port (I2C)",audioplayer_play_by_sn:"audio player: bermain [FILE_SN] audio file",audioplayer_play_by_name:"audio player: memutar file audio yang bernama [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"tunggal",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"loop",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"urutan",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"mengocok",audioplayer_set_play_mode:"audio player: mengatur mode untuk [PLAY_MODE]",audioplayer_play_previous:"audio player: memutar file audio yang sebelumnya",audioplayer_play_next:"audio player: memutar file audio yang berikutnya",audioplayer_pause:"audio player: jeda/Lanjutkan",audioplayer_stop:"audio player: berhenti bermain",audioplayer_set_volume:"audio player: mengatur volume [VOLUME] %",audioplayer_volume_up:"audio player: volume atas",audioplayer_volume_down:"audio player: volume bawah",audioplayer_record:"audio player: mulai merekam dan menyimpan ke [FILE_NAME]",audioplayer_record_stop:"audio player: menghentikan perekaman"},ja:{audio_player_rj25:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC",extensionName:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC",extensionDescription:"Audio Player",audioplayer_init:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\u306E\u521D\u671F\u5316\uFF1A\u4EFB\u610F\u306E\u30DB\u30EF\u30A4\u30C8\u30DD\u30FC\u30C8 (I2C)",audioplayer_play_by_sn:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB[FILE_SN] \u3092\u518D\u751F\u3059\u308B",audioplayer_play_by_name:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A[FILE_NAME] \u306E\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3092\u518D\u751F\u3059\u308B",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"1\u66F2\u518D\u751F",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u30EB\u30FC\u30D7\u518D\u751F",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u9806\u756A\u518D\u751F",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\u30B7\u30E3\u30C3\u30D5\u30EB\u518D\u751F",audioplayer_set_play_mode:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u518D\u751F\u30E2\u30FC\u30C9\u3092 [PLAY_MODE] \u306B\u8A2D\u5B9A\u3059\u308B",audioplayer_play_previous:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u524D\u306E\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3092\u518D\u751F\u3059\u308B",audioplayer_play_next:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u6B21\u306E\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3092\u518D\u751F\u3059\u308B",audioplayer_pause:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u4E00\u6642\u505C\u6B62/\u518D\u751F",audioplayer_stop:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u518D\u751F\u3092\u505C\u6B62\u3059\u308B",audioplayer_set_volume:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u97F3\u91CF\u3092 [VOLUME] %\u306B\u8A2D\u5B9A\u3059\u308B",audioplayer_volume_up:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u97F3\u91CF\u3092\u4E0A\u3052\u308B",audioplayer_volume_down:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u97F3\u91CF\u3092\u4E0B\u3052\u308B",audioplayer_record:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u9332\u97F3\u3092\u958B\u59CB\u3057\u3066[FILE_NAME] \u306B\u4FDD\u5B58\u3059\u308B",audioplayer_record_stop:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u9332\u97F3\u3092\u505C\u6B62\u3059\u308B"},"ja-jph":{audio_player_rj25:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC",extensionName:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC",extensionDescription:"Audio Player",audioplayer_init:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\u306E\u3057\u3087\u304D\u304B\uFF1A\u306B\u3093\u3044\u306E\u30DB\u30EF\u30A4\u30C8\u30DD\u30FC\u30C8 (I2C)",audioplayer_play_by_sn:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB[FILE_SN] \u3092\u3055\u3044\u305B\u3044\u3059\u308B",audioplayer_play_by_name:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A[FILE_NAME] \u306E\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3092\u3055\u3044\u305B\u3044\u3059\u308B",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"1\u304D\u3087\u304F\u3055\u3044\u305B\u3044",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u30EB\u30FC\u30D7\u3055\u3044\u305B\u3044",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u3058\u3085\u3093\u3070\u3093\u3055\u3044\u305B\u3044",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\u30B7\u30E3\u30C3\u30D5\u30EB\u3055\u3044\u305B\u3044",audioplayer_set_play_mode:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u3055\u3044\u305B\u3044\u30E2\u30FC\u30C9\u3092 [PLAY_MODE] \u306B\u305B\u3063\u3066\u3044\u3059\u308B",audioplayer_play_previous:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u307E\u3048\u306E\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3092\u3055\u3044\u305B\u3044\u3059\u308B",audioplayer_play_next:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u3064\u304E\u306E\u30AA\u30FC\u30C7\u30A3\u30AA\u30D5\u30A1\u30A4\u30EB\u3092\u3055\u3044\u305B\u3044\u3059\u308B",audioplayer_pause:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u3044\u3061\u3058\u3066\u3044\u3057/\u3055\u3044\u305B\u3044",audioplayer_stop:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u3055\u3044\u305B\u3044\u3092\u3066\u3044\u3057\u3059\u308B",audioplayer_set_volume:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u304A\u3093\u308A\u3087\u3046\u3092 [VOLUME] %\u306B\u305B\u3063\u3066\u3044\u3059\u308B",audioplayer_volume_up:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u304A\u3093\u308A\u3087\u3046\u3092\u3042\u3052\u308B",audioplayer_volume_down:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u304A\u3093\u308A\u3087\u3046\u3092\u3055\u3052\u308B",audioplayer_record:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u308D\u304F\u304A\u3093\u3092\u304B\u3044\u3057\u3057\u3066[FILE_NAME] \u306B\u307B\u305E\u3093\u3059\u308B",audioplayer_record_stop:"\u30AA\u30FC\u30C7\u30A3\u30AA\u30D7\u30EC\u30FC\u30E4\u30FC\uFF1A\u308D\u304F\u304A\u3093\u3092\u3066\u3044\u3057\u3059\u308B"},ko:{audio_player_rj25:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4",extensionName:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4",extensionDescription:"Audio Player",audioplayer_init:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4 \uCD08\uAE30\uD654: \uBAA8\uB4E0 \uD654\uC774\uD2B8 \uD3EC\uD2B8(I2C)",audioplayer_play_by_sn:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uC7AC\uC0DD [FILE_SN] \uC624\uB514\uC624 \uD30C\uC77C",audioplayer_play_by_name:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uB77C\uB294 \uC624\uB514\uC624 \uD30C\uC77C\uC744 \uC7AC\uC0DD [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\uB2E8\uC77C",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\uB8E8\uD504",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\uC21C\uC11C",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\uC154\uD50C",audioplayer_set_play_mode:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uBAA8\uB4DC \uC124\uC815 [PLAY_MODE]",audioplayer_play_previous:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uC774\uC804 \uC624\uB514\uC624 \uD30C\uC77C \uC7AC\uC0DD",audioplayer_play_next:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uB2E4\uC74C \uC624\uB514\uC624 \uD30C\uC77C \uC7AC\uC0DD",audioplayer_pause:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uC77C\uC2DC \uC815\uC9C0/\uACC4\uC18D",audioplayer_stop:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uC7AC\uC0DD \uC911\uC9C0",audioplayer_set_volume:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uBCFC\uB968 \uC124\uC815 [VOLUME] %",audioplayer_volume_up:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uBCFC\uB968 \uB192\uC774\uAE30",audioplayer_volume_down:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uBCFC\uB968 \uC791\uAC8C",audioplayer_record:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uB179\uC74C\uC744 \uC2DC\uC791 \uD558 \uACE0 \uC800\uC7A5 [FILE_NAME]",audioplayer_record_stop:"\uC624\uB514\uC624 \uD50C\uB808\uC774\uC5B4: \uB179\uD654 \uC911\uC9C0"},pl:{audio_player_rj25:"Odtwarzacz audio",extensionName:"Odtwarzacz audio",extensionDescription:"Audio Player",audioplayer_init:"Inicjowanie odtwarzacza audio: dowolny bia\u0142y port (I2C)",audioplayer_play_by_sn:"audio: odtwarzaj [FILE_SN]",audioplayer_play_by_name:"audio: odtw\xF3rz plik [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"jeden raz",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"p\u0119tla",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"lista",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"losowo",audioplayer_set_play_mode:"audio: ustaw tryb odtwarzania [PLAY_MODE]",audioplayer_play_previous:"audio: odtw\xF3rz poprzedni",audioplayer_play_next:"audio: odtw\xF3rz nast\u0119pny",audioplayer_pause:"audio: pauza/wzn\xF3w",audioplayer_stop:"audio: zatrzymaj odtwarzanie",audioplayer_set_volume:"audio: ustaw g\u0142o\u015Bno\u015B\u0107 [VOLUME] %",audioplayer_volume_up:"audio: zwi\u0119ksz g\u0142o\u015Bno\u015B\u0107",audioplayer_volume_down:"audio: zmniejsz g\u0142o\u015Bno\u015B\u0107",audioplayer_record:"audio: rozpocznij nagrywanie i zapisz jako [FILE_NAME]",audioplayer_record_stop:"audio: zatrzymaj nagrywanie"},uk:{audio_player_rj25:"\u0410\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447",extensionName:"\u0410\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447",extensionDescription:"Audio Player",audioplayer_init:"\u0456\u043D\u0456\u0446\u0456\u0430\u043B\u0456\u0437\u0443\u0432\u0430\u0442\u0438 \u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447 \u043D\u0430: \u0431\u0443\u0434\u044C-\u044F\u043A\u0438\u0439 \u0431\u0456\u043B\u0438\u0439 \u043F\u043E\u0440\u0442 (I2C)",audioplayer_play_by_sn:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0433\u0440\u0430\u0442\u0438 \u0430\u0443\u0434\u0456\u043E \u0444\u0430\u0439\u043B [FILE_SN]",audioplayer_play_by_name:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0432\u0456\u0434\u0442\u0432\u043E\u0440\u0438\u0442\u0438 \u0430\u0443\u0434\u0456\u043E\u0444\u0430\u0439\u043B \u0437 \u0456\u043C'\u044F\u043C [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\u043E\u0434\u0438\u043D \u0444\u0430\u0439\u043B",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u0437\u0430\u0446\u0438\u043A\u043B\u0438\u0442\u0438",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u043F\u043E \u043F\u043E\u0440\u044F\u0434\u043A\u0443",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\u043F\u0435\u0440\u0435\u043C\u0456\u0448\u0430\u0442\u0438",audioplayer_set_play_mode:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438 \u0440\u0435\u0436\u0438\u043C [PLAY_MODE]",audioplayer_play_previous:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0433\u0440\u0430\u0442\u0438 \u043F\u043E\u043F\u0435\u0440\u0435\u0434\u043D\u0456\u0439 \u0430\u0443\u0434\u0456\u043E \u0444\u0430\u0439\u043B",audioplayer_play_next:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0433\u0440\u0430\u0442\u0438 \u043D\u0430\u0441\u0442\u0443\u043F\u043D\u0438\u0439 \u0430\u0443\u0434\u0456\u043E \u0444\u0430\u0439\u043B",audioplayer_pause:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u043F\u0430\u0443\u0437\u0430/\u043F\u0440\u043E\u0434\u043E\u0432\u0436\u0438\u0442\u0438",audioplayer_stop:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0437\u0443\u043F\u0438\u043D\u0438\u0442\u0438 \u0432\u0456\u0434\u0442\u0432\u043E\u0440\u0435\u043D\u043D\u044F",audioplayer_set_volume:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0432\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0438 \u0433\u0443\u0447\u043D\u0456\u0441\u0442\u044C \u043D\u0430 [VOLUME] %",audioplayer_volume_up:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0437\u0431\u0456\u043B\u044C\u0448\u0438\u0442\u0438 \u0433\u0443\u0447\u043D\u0456\u0441\u0442\u044C",audioplayer_volume_down:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0437\u043C\u0435\u043D\u0448\u0438\u0442\u0438 \u0433\u0443\u0447\u043D\u0456\u0441\u0442\u044C",audioplayer_record:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u043F\u043E\u0447\u0430\u0442\u0438 \u0437\u0430\u043F\u0438\u0441 \u0456 \u0437\u0431\u0435\u0440\u0435\u0433\u0442\u0438 \u044F\u043A [FILE_NAME]",audioplayer_record_stop:"\u0430\u0443\u0434\u0456\u043E\u043F\u0440\u043E\u0433\u0440\u0430\u0432\u0430\u0447: \u0437\u0443\u043F\u0438\u043D\u0438\u0442\u0438 \u0437\u0430\u043F\u0438\u0441"},"zh-hant":{audio_player_rj25:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44",extensionName:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44",extensionDescription:"Audio Player",audioplayer_init:"\u521D\u59CB\u5316\u97F3\u6A02\u9304\u653E\u6A21\u7D44\u5728: \u4EFB\u4F55\u767D\u8272\u57E0 (I2C)",audioplayer_play_by_sn:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u64AD\u653E [FILE_SN] \u97F3\u8A0A\u6A94",audioplayer_play_by_name:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u64AD\u653E\u540D\u70BA [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\u55AE\u4E00",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u8FF4\u5708",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u64AD\u653E\u9806\u5E8F",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\u96A8\u6A5F\u64AD\u653E",audioplayer_set_play_mode:"\u97F3\u6A02\u6A21\u7D44: \u5C07\u6A21\u5F0F\u8A2D\u7F6E\u70BA [PLAY_MODE]",audioplayer_play_previous:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u64AD\u653E \u97F3\u8A0A\u6A94",audioplayer_play_next:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u64AD\u653E\u4E0B\u4E00\u500B\u97F3\u8A0A\u6A94",audioplayer_pause:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u66AB\u505C/\u7E7C\u7E8C",audioplayer_stop:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u505C\u6B62\u64AD\u653E",audioplayer_set_volume:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u5C07\u97F3\u91CF\u8A2D\u7F6E\u70BA [VOLUME] %",audioplayer_volume_up:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u97F3\u91CF\u589E\u5927",audioplayer_volume_down:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u97F3\u91CF\u964D\u4F4E",audioplayer_record:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u958B\u59CB\u9304\u88FD\u4E26\u4FDD\u5B58\u5230 [FILE_NAME]",audioplayer_record_stop:"\u97F3\u6A02\u9304\u653E\u6A21\u7D44: \u505C\u6B62\u9304\u88FD"},nl:{audio_player_rj25:"Audiospeler",extensionName:"Audiospeler",extensionDescription:"Audio Player",audioplayer_init:"initialiseren audio-speler op: elke witte poort (I2C)",audioplayer_play_by_sn:"audiospeler: speel audiobestand [FILE_SN]",audioplayer_play_by_name:"audiospeler: speel audiobestand met naam [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"enkel",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"herhaal",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"volgorde",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"willekeurig",audioplayer_set_play_mode:"audiospeler: zet modus [PLAY_MODE]",audioplayer_play_previous:"audiospeler: speel vorig audiobestand",audioplayer_play_next:"audiospeler: speel volgend audiobestand",audioplayer_pause:"audiospeler: pauze/doorgaan",audioplayer_stop:"audiospeler: stop afspelen",audioplayer_set_volume:"audiospeler: zet volume op [VOLUME] %",audioplayer_volume_up:"audiospeler: volume hoger",audioplayer_volume_down:"audiospeler: volume lager",audioplayer_record:"audiospeler: start opname en sla op [FILE_NAME]",audioplayer_record_stop:"audiospeler: stop opnemen"},it:{audio_player_rj25:"Lettore Audio",extensionName:"Lettore Audio",extensionDescription:"Audio Player",audioplayer_init:"inizializza il lettore audio a: qualsiasi porta bianca (I2C)",audioplayer_play_by_sn:"lettore audio: riprodurre il [FILE_SN] file audio",audioplayer_play_by_name:"lettore audio: riprodurre il file audio denominato [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"singola",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"ciclo",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"ordina",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"casuale",audioplayer_set_play_mode:"lettore audio: impostare la modalit\xE0 [PLAY_MODE]",audioplayer_play_previous:"lettore audio: riprodurre il file audio precedente",audioplayer_play_next:"lettore audio: riprodurre il file audio successivo",audioplayer_pause:"lettore audio: pausa/continua",audioplayer_stop:"lettore audio: smettere di suonare",audioplayer_set_volume:"lettore audio: impostare la modalit\xE0 [VOLUME] %",audioplayer_volume_up:"lettore audio: volume su",audioplayer_volume_down:"lettore audio: volume gi\xF9",audioplayer_record:"lettore audio: avviare la registrazione e salvare [FILE_NAME]",audioplayer_record_stop:"lettore audio: interrompere la registrazione"},hr:{audio_player_rj25:"Audio player",extensionName:"Audio player",extensionDescription:"Audio Player",audioplayer_init:"inicijaliziraj audio player na: bilo koji bijeli priklju\u010Dak (I2C)",audioplayer_play_by_sn:"audio player: reproducirajte [FILE_SN] audiodatoteka",audioplayer_play_by_name:"Audio Player: reproducirajte audiodatoteke pod imenom [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"Jednog",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"Petlja",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"Naloga",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"Shuffle",audioplayer_set_play_mode:"audio player: Postavljanje na\u010Dina [PLAY_MODE]",audioplayer_play_previous:"audio player: Reproduciraj prethodnu audiodatoteke",audioplayer_play_next:"audio player: Reproduciraj sljede\u0107u audiodatoteke",audioplayer_pause:"audio player: Pauziraj/nastavi",audioplayer_stop:"audio player: prestati igrati",audioplayer_set_volume:"audio player: postavite glasno\u0107u na [VOLUME] %",audioplayer_volume_up:"audio player: pove\u0107avanje glasno\u0107e",audioplayer_volume_down:"audio player: smanjivanje glasno\u0107e",audioplayer_record:"audio player: Po\u010Dnite snimati i spremite [FILE_NAME]",audioplayer_record_stop:"audio player: zaustavljanje snimanja"},ru:{audio_player_rj25:"Audio Player",extensionName:"Audio Player",extensionDescription:"Audio Player",audioplayer_init:"\u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0430\u0443\u0434\u0438\u043E \u043F\u0440\u043E\u0438\u0433\u0440\u044B\u0432\u0430\u0442\u0435\u043B\u044C: \u043B\u044E\u0431\u043E\u0439 \u0431\u0435\u043B\u044B\u0439 \u043F\u043E\u0440\u0442 (I2C)",audioplayer_play_by_sn:"audio player: \u0432\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 [FILE_SN] \u0437\u0432\u0443\u043A\u043E\u0432\u043E\u0439 \u0444\u0430\u0439\u043B",audioplayer_play_by_name:"audio player: \u0432\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0437\u0432\u0443\u043A\u043E\u0432\u043E\u0439 \u0444\u0430\u0439\u043B \u0441 \u0438\u043C\u0435\u043D\u0435\u043C [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\u041E\u0434\u043D\u043E\u0433\u043E",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u0426\u0438\u043A\u043B",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u0417\u0430\u043A\u0430\u0437",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"Shuffle",audioplayer_set_play_mode:"audio player: \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0440\u0435\u0436\u0438\u043C [PLAY_MODE]",audioplayer_play_previous:"audio player: \u0412\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u043F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0439 \u0437\u0432\u0443\u043A\u043E\u0432\u043E\u0439 \u0444\u0430\u0439\u043B",audioplayer_play_next:"audio player: \u0432\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u0437\u0432\u0443\u043A\u043E\u0432\u043E\u0439 \u0444\u0430\u0439\u043B",audioplayer_pause:"audio player: \u043F\u0430\u0443\u0437\u0430/\u043F\u0440\u043E\u0434\u043E\u043B\u0436\u0438\u0442\u044C",audioplayer_stop:"audio player: \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0430 \u0432\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0434\u0435\u043D\u0438\u044F",audioplayer_set_volume:"audio player: \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0433\u0440\u043E\u043C\u043A\u043E\u0441\u0442\u044C [VOLUME] %",audioplayer_volume_up:"audio player: \u0433\u0440\u043E\u043C\u043A\u043E\u0441\u0442\u044C \u0432\u0432\u0435\u0440\u0445",audioplayer_volume_down:"audio player: \u0433\u0440\u043E\u043C\u043A\u043E\u0441\u0442\u044C \u0432\u043D\u0438\u0437",audioplayer_record:"audio player: \u043D\u0430\u0447\u0430\u0442\u044C \u0437\u0430\u043F\u0438\u0441\u044C \u0438 \u0441\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C \u0432 [FILE_NAME]",audioplayer_record_stop:"audio player: \u043E\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0430 \u0437\u0430\u043F\u0438\u0441\u0438"},pt:{audio_player_rj25:"Audio Player",extensionName:"Audio Player",extensionDescription:"Audio Player",audioplayer_init:"inicializar o reprodutor de \xE1udio em: qualquer porta branca (I2C)",audioplayer_play_by_sn:"audio player: jogar o [FILE_SN] arquivo de \xE1udio",audioplayer_play_by_name:"audio player: reproduzir o arquivo de \xE1udio chamado [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\xDAnico",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"Loop",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"Ordem",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"Shuffle",audioplayer_set_play_mode:"audio player: modo set para [PLAY_MODE]",audioplayer_play_previous:"audio player: reproduzir arquivo de \xE1udio anterior",audioplayer_play_next:"audio player: tocar pr\xF3ximo arquivo de \xE1udio",audioplayer_pause:"audio player: Pause/continue",audioplayer_stop:"audio player: parar de jogar",audioplayer_set_volume:"audio player: definir o volume [VOLUME] %",audioplayer_volume_up:"audio player: aumentar o volume",audioplayer_volume_down:"audio player: volume para baixo",audioplayer_record:"audio player: iniciar a grava\xE7\xE3o e salvar [FILE_NAME]",audioplayer_record_stop:"audio player: parar a grava\xE7\xE3o"},fi:{audio_player_rj25:"Audio Player",extensionName:"Audio Player",extensionDescription:"Audio Player",audioplayer_init:"alusta Audio soitin: kaikki valkoinen portti (I2C)",audioplayer_play_by_sn:"audio player: Toista [FILE_SN] \xE4\xE4ni tiedosto",audioplayer_play_by_name:"audio player: Toista \xE4\xE4ni tiedosto nimelt\xE4 [FILE_NAME]",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"Yhden",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"Silmukka",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"Tilaa",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"Shuffle",audioplayer_set_play_mode:"audio player: Aseta tila [PLAY_MODE]",audioplayer_play_previous:"audio player: Toista edellinen \xE4\xE4ni tiedosto",audioplayer_play_next:"audio player: toista seuraava \xE4\xE4ni tiedosto",audioplayer_pause:"audio player: tauko/jatkuu",audioplayer_stop:"audio player: lopeta pelaaminen",audioplayer_set_volume:"audio player: Aseta \xE4\xE4nen voimakkuus [VOLUME] %",audioplayer_volume_up:"audio player: \xE4\xE4nen voimakkuuden lis\xE4ys",audioplayer_volume_down:"audio player: \xE4\xE4nen voimakkuus alas",audioplayer_record:"audio player: Aloita tallennus ja Tallenna [FILE_NAME]",audioplayer_record_stop:"audio player: Lopeta tallennus"},tr:{audio_player_rj25:"M\xFCzik \xC7alar",extensionName:"M\xFCzik \xC7alar",extensionDescription:"Audio Player",audioplayer_init:"ses oynat\u0131c\u0131da ba\u015Flat: herhangi bir beyaz ba\u011Flant\u0131 noktas\u0131 (I2C)",audioplayer_play_by_sn:"m\xFCzik \xE7alar: [FILE_SN] dosyas\u0131n\u0131 \xE7al",audioplayer_play_by_name:"m\xFCzik \xE7alar: [FILE_NAME] adl\u0131 ses dosyas\u0131n\u0131 oynat",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"tek \u015Fark\u0131 \xE7al",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"tekrarla",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"s\u0131ras\u0131yla \xE7al",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"kar\u0131\u015F\u0131k \xE7al",audioplayer_set_play_mode:"m\xFCzik \xE7alar: set modu [PLAY_MODE]",audioplayer_play_previous:"m\xFCzik \xE7alar: \xF6nceki ses dosyas\u0131n\u0131 \xE7al",audioplayer_play_next:"m\xFCzik \xE7alar: sonraki ses dosyas\u0131n\u0131 \xE7al",audioplayer_pause:"m\xFCzik \xE7alar: duraklat/devam et",audioplayer_stop:"m\xFCzik \xE7alar: durdur",audioplayer_set_volume:"m\xFCzik \xE7alar: ses seviyesi[VOLUME] %",audioplayer_volume_up:"m\xFCzik \xE7alar: sesi art\u0131r",audioplayer_volume_down:"m\xFCzik \xE7alar: sesi azalt",audioplayer_record:"m\xFCzik \xE7alar: [FILE_NAME] dosyas\u0131na kaydetmeye ba\u015Fla",audioplayer_record_stop:"m\xFCzik \xE7alar: kayd\u0131 durdur"},tk:{audio_player_rj25:"Ses a\xFDtdyryjy",extensionName:"Ses a\xFDtdyryjy",extensionDescription:"Audio Player",audioplayer_init:"ses a\xFDtdyryjyny i\u015Flet: islendik ak portda (I2C)",audioplayer_play_by_sn:"ses a\xFDtdyryjy: [FILE_SN] atly ses fa\xFDlyny a\xFDtdyr",audioplayer_play_by_name:"ses a\xFDtdyryjy: [FILE_NAME] atly ses fa\xFDlyny a\xFDtdyr",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\xFDekele\xFDin",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"siklle\xFDin",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"d\xFCzg\xFCn bo\xFDun\xE7a",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"t\xF6t\xE4nle\xFDin",audioplayer_set_play_mode:"ses a\xFDtdyryjy: i\u015Fledi\u015F d\xFCzg\xFCnini [PLAY_MODE] et",audioplayer_play_previous:"ses a\xFDtdyryjy: \xF6\u0148ki ses fa\xFDlyny a\xFDtdyr",audioplayer_play_next:"ses a\xFDtdyryjy: indiki ses fa\xFDlyny a\xFDtdyr",audioplayer_pause:"ses a\xFDtdyryjy: sakla/dowam et",audioplayer_stop:"ses a\xFDtdyryjy: a\xFDtdyrmagy bes et",audioplayer_set_volume:"ses a\xFDtdyryjy: ses kuwwatlylygyny [VOLUME] % et",audioplayer_volume_up:"ses a\xFDtdyryjy: sesi artdyrmak",audioplayer_volume_down:"ses a\xFDtdyryjy: sesi peseltmek",audioplayer_record:"ses a\xFDtdyryjy: \xFDazgy etm\xE4ge ba\u015Fla we [FILE_NAME] fa\xFDlyna \xFDazdyr",audioplayer_record_stop:"ses a\xFDtdyryjy: \xFDazgy etmegi bes et"},fa:{audio_player_rj25:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC",extensionName:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC",extensionDescription:"Audio Player",audioplayer_init:"\u0645\u0642\u062F\u0627\u0631\u062F\u0647\u06CC \u0627\u0648\u0644\u06CC\u0647 \u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC \u062F\u0631: \u0647\u0631 \u067E\u0648\u0631\u062A \u0633\u0641\u06CC\u062F (I2C)",audioplayer_play_by_sn:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0641\u0627\u06CC\u0644 \u0635\u0648\u062A\u06CC [FILE_SN] \u067E\u062E\u0634 \u0634\u0648\u062F",audioplayer_play_by_name:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0641\u0627\u06CC\u0644 \u0635\u0648\u062A\u06CC \u0628\u0647 \u0646\u0627\u0645 [FILE_NAME] \u067E\u062E\u0634 \u0634\u0648\u062F",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0:"\u062A\u06A9\u06CC",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1:"\u062D\u0644\u0642\u0647 \u062A\u0643\u0631\u0627\u0631",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2:"\u062A\u0631\u062A\u06CC\u0628",AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3:"\u062A\u0635\u0627\u062F\u0641\u06CC",audioplayer_set_play_mode:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u062D\u0627\u0644\u062A \u0628\u0647 [PLAY_MODE] \u062A\u0646\u0638\u06CC\u0645 \u0634\u0648\u062F",audioplayer_play_previous:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0641\u0627\u06CC\u0644 \u0635\u0648\u062A\u06CC \u0642\u0628\u0644\u06CC \u067E\u062E\u0634 \u0634\u0648\u062F",audioplayer_play_next:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0641\u0627\u06CC\u0644 \u0635\u0648\u062A\u06CC \u0628\u0639\u062F\u06CC \u067E\u062E\u0634 \u0634\u0648\u062F",audioplayer_pause:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0645\u06A9\u062B/\u0627\u062F\u0627\u0645\u0647",audioplayer_stop:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u062A\u0648\u0642\u0641 \u067E\u062E\u0634",audioplayer_set_volume:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u062A\u0646\u0638\u06CC\u0645 \u0635\u062F\u0627 \u0628\u0647 [VOLUME] %",audioplayer_volume_up:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0627\u0641\u0632\u0627\u06CC\u0634 \u0635\u062F\u0627",audioplayer_volume_down:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u06A9\u0627\u0647\u0634 \u0635\u062F\u0627",audioplayer_record:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u0634\u0631\u0648\u0639 \u0628\u0647 \u0636\u0628\u0637 \u06A9\u0631\u062F\u0646 \u0648 \u0630\u062E\u06CC\u0631\u0647 \u062F\u0631[FILE_NAME]",audioplayer_record_stop:"\u067E\u062E\u0634 \u06A9\u0646\u0646\u062F\u0647 \u0635\u0648\u062A\u06CC: \u062A\u0648\u0642\u0641 \u0636\u0628\u0637"}},E={arduinoc:{}},A=[{lang:"arduinoc",template:"// generated by mBlock5 for Audio player\n// codes make you happy\n\n//( include //)\n\n//( lib //)\n\n//({\n    this.$ALL_VARIABLES.length==0?'':this.$ALL_VARIABLES.map(v=>\"float \"+v+\" = 0;\").join('\\n')\n}//)\n\n//( declare //)\n\nvoid _delay(float seconds) {\n  long endTime = millis() + seconds * 1000;\n  while(millis() < endTime) _loop();\n}\n\n//(\nvoid setup() {\n  //( setup //)\n  //( code //)\n}\n//)\n\nvoid _loop() {\n  //( _loop //)\n}\n\nvoid loop() {\n  //( loop //)\n  _loop();\n}",splitor:{frame:{left:"//(",right:"//)"},expression:{left:"/*{",right:"}*/"}},reducers:[{name:"include",reduce:function reduce(e){var a=[],r=!0,o=!1,i=void 0;try{for(var t,n=e[Symbol.iterator]();!(r=(t=n.next()).done);r=!0){var u=t.value,l="";"string"==typeof u?l=u:"function"==typeof u&&(l=u()),-1===a.indexOf(l)&&a.push(l)}}catch(e){o=!0,i=e}finally{try{r||null==n.return||n.return()}finally{if(o)throw i}}return 0===a.length?void 0:a.map(function(e){return"#include "+e}).join("\n")+"\n"}}]}],M={arduino:[{filename:"src/MeAudioPlayer.cpp",code:"/**\r\n * \\par Copyright (C), 2012-2017, MakeBlock\r\n * \\class   MeAudioPlayer\r\n * \\brief   Driver for MeAudioPlayer module.\r\n * @file    MeAudioPlayer.h\r\n * @author  MakeBlock\r\n * @version V1.0.0\r\n * @date    2017/11/17\r\n * @brief   Header for MeAudioPlayer.cpp module.\r\n *\r\n * \\par Copyright\r\n * This software is Copyright (C), 2012-2016, MakeBlock. Use is subject to license \\n\r\n * conditions. The main licensing options available are GPL V2 or Commercial: \\n\r\n *\r\n * \\par Open Source Licensing GPL V2\r\n * This is the appropriate option if you want to share the source code of your \\n\r\n * application with everyone you distribute it to, and you also want to give them \\n\r\n * the right to share who uses it. If you wish to use this software under Open \\n\r\n * Source Licensing, you must contribute all your source code to the open source \\n\r\n * community in accordance with the GPL Version 2 when your application is \\n\r\n * distributed. See http://www.gnu.org/copyleft/gpl.html\r\n *\r\n * \\par Description\r\n * This file is a drive for MeAudioPlayer module, It supports MeAudioPlayer V1.0 device provided\r\n * by MakeBlock.\r\n *\r\n * \\par Method List:\r\n *\r\n *   void MeAudioPlayer::PlayerInit(void)\r\n *   void MeAudioPlayer::playMusicFileIndex(uint16_t music_index);\r\n *   void MeAudioPlayer::playMusicFileName(String str);  \r\n *   void MeAudioPlayer::pauseMusic(void);\r\n *   void MeAudioPlayer::stopMusic(void);\r\n *   void MeAudioPlayer::playNextMusic(void);\r\n *   void MeAudioPlayer::playPrevMusic(void);\r\n *   void MeAudioPlayer::setMusicVolume(uint8_t vol);\r\n *   void MeAudioPlayer::setMusicPlayMode(uint8_t mode);\r\n *   void MeAudioPlayer::startRecordingFileName(String str);\r\n *   void MeAudioPlayer::stopRecording(void);\r\n *   void MeAudioPlayer::volumeUp(void);\r\n *   void MeAudioPlayer::volumeDown(void);\r\n *   void MeAudioPlayer::deleteFileName(String str);\r\n *   void MeAudioPlayer::deleteAllMusicFile(void);\r\n * \r\n * \\par History:\r\n * <pre>\r\n * \"<Author>\"         \"<Time>\"        \"<Version>\"        \"<Descr>\"\r\n *  Lanweiting      2017/11/15          1.0.0         Build the files.\r\n * </pre>\r\n *\r\n * @example MeAudioPlayerTest.ino\r\n */\r\n\r\n#include \"MeAudioPlayer.h\"\r\n\r\n/* Private functions ---------------------------------------------------------*/\r\n#ifdef ME_PORT_DEFINED\r\n/**\r\n * Alternate Constructor which can call your own function to map the MeAudioPlayer to arduino port,\r\n * no pins are used or initialized here\r\n */\r\nMeAudioPlayer::MeAudioPlayer(void) : MePort(0)\r\n{\r\n  Device_Address = AUDIOPLAYER_DEFAULT_ADDRESS;\r\n}\r\n\r\n/**\r\n * Alternate Constructor which can call your own function to map the MeAudioPlayer to arduino port,\r\n * \\param[in]\r\n *   port - RJ25 port number\r\n */\r\nMeAudioPlayer::MeAudioPlayer(uint8_t port) : MePort(port)\r\n{\r\n  Device_Address = AUDIOPLAYER_DEFAULT_ADDRESS;\r\n}\r\n\r\n/**\r\n * Alternate Constructor which can call your own function to map the MeAudioPlayer to arduino port\r\n * and change the i2c device address\r\n * \\param[in]\r\n *   port - RJ25 port number\r\n * \\param[in]\r\n *   address - the i2c address you want to set\r\n */\r\nMeAudioPlayer::MeAudioPlayer(uint8_t port, uint8_t address) : MePort(port)\r\n{\r\n  Device_Address = address;\r\n}\r\n#else  // ME_PORT_DEFINED\r\n/**\r\n * Alternate Constructor which can call your own function to map the _AD0 and _INT to arduino port,\r\n * \\param[in]\r\n *   _AD0 - arduino gpio number\r\n * \\param[in]\r\n *   _INT - arduino gpio number\r\n */\r\nMeAudioPlayer::MeAudioPlayer(uint8_t _AD0, uint8_t _INT)\r\n{\r\n  Device_Address = AUDIOPLAYER_DEFAULT_ADDRESS;\r\n  _AD0 = _AD0;\r\n  _INT = _INT;\r\n}\r\n\r\n#endif /* ME_PORT_DEFINED */\r\n\r\n\r\n/**\r\n * \\par Function\r\n *    sendCmd\r\n * \\par Description\r\n *    send the datas to serial com.\r\n * \\param[in]\r\n *    data pionter,len\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::sendCmd(uint8_t *sendcmd, uint8_t len)\r\n{\r\n  int8_t i;\r\n  \r\n/*  if(millis() - nextCmd_time > MAX_TIMEOUT)  \r\n  {\r\n    Wire.beginTransmission(Device_Address);\r\n    for(i = 0; i < len ; i++)\r\n    {\r\n      Wire.write(sendcmd[i]);\r\n    }\r\n    Wire.endTransmission(true);\r\n    nextCmd_time = millis();\r\n  }*/\r\n  \r\n  Wire.beginTransmission(Device_Address);\r\n  for(i = 0; i < len ; i++)\r\n  {\r\n    Wire.write(sendcmd[i]);\r\n  }\r\n  Wire.endTransmission(true);\r\n  \r\n}\r\n\r\n/**\r\n * \\par Function\r\n *    checkSum\r\n * \\par Description\r\n *    return check And result\r\n * \\param[in]\r\n *    data pionter,len\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nuint8_t MeAudioPlayer::checkSum(uint8_t* buffer, uint8_t len)\r\n{\r\n  uint8_t result = 0x00;\r\n  for (int i = 1; i < len; i++)\r\n  {\r\n  \tresult += *(buffer+i);\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *   PlayerInit\r\n * \\par Description\r\n *   Initialize the MeAudioPlayer.\r\n * \\param[in]\r\n *   None\r\n * \\par Output\r\n *   None\r\n * \\return\r\n *   None\r\n * \\par Others\r\n *   None\r\n */\r\nvoid MeAudioPlayer::PlayerInit(void)\r\n{\r\n  // readbuffer[15] = {0};\r\n  writebuffer[27] =  {0};\r\n  Wire.begin();\r\n  delay(3000);\r\n  prevCmd_time = millis();\r\n}\r\n/************************************************************\r\n\r\n\t\t\tPlaying Music Control Function\r\n\r\n*************************************************************/\r\n/**\r\n * \\par Function\r\n *    playMusicFileIndex\r\n * \\par Description\r\n *    play a mucsic File with it index on root\r\n * \\param[in]\r\n *    uint16_t index\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::playMusicFileIndex(uint16_t music_index)\r\n{\r\n  uint8_t len = 0x05;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n  if (music_index > 0xFFFF)\r\n  {\r\n    music_index = 0xFFFF;\r\n  }\r\n  writebuffer[0] = MECODE_START;\r\n  writebuffer[1] = len;\r\n  writebuffer[2] = MEPLAY_FILE_INDEX;\r\n  writebuffer[3] = music_index >> 8;\r\n  writebuffer[4] = (uint8_t)music_index;\r\n  writebuffer[5] = checkSum(writebuffer, len);\r\n  writebuffer[6] = MECODE_END;\r\n  \r\n  sendCmd(writebuffer, len+2);\r\n  prevCmd_time = millis();\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *    playMusicFileName\r\n * \\par Description\r\n *    play a mucsic File with it name\r\n * \\param[in]\r\n *    String str\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\n\r\nvoid MeAudioPlayer::playMusicFileName(String str)\r\n{\r\n  uint8_t len = 0;\r\n  uint8_t str_len = 0;\r\n  uint8_t i = 0;\r\n  char temp[10];\r\n  char temp_ch;\r\n  str_len = str.length();\r\n\r\n  if (str_len > 8)\r\n  {\r\n    len = 8;   \r\n  }\r\n  else\r\n  {\r\n    len = str_len;\r\n  }\r\n  for (int i = 0; i < len; i++)\r\n  {\r\n    temp_ch = str.charAt(i);\r\n    temp[i] = (temp_ch >= 'a' && temp_ch <= 'z') ? (temp_ch - 32) : temp_ch;  \r\n  }\r\n  \r\n  \r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n  \r\n  if (str_len > 8)\r\n  {\r\n    len = 11;\r\n    writebuffer[0] = MECODE_START;\r\n    writebuffer[1] = len;\r\n    writebuffer[2] = MEPLAY_FILE_NAME;\r\n  \r\n    for (int k = 0; k < 6; k++)\r\n    {\r\n      writebuffer[3 + k] = (uint8_t)temp[k];\r\n    }\r\n    writebuffer[len - 2] = 0x7E;\r\n    writebuffer[len - 1] = 0x31;\r\n    writebuffer[len] = (uint8_t)checkSum(writebuffer, len);\r\n    writebuffer[len + 1] = MECODE_END;\r\n  }\r\n  else\r\n  {\r\n    len = str_len + 3;\r\n    writebuffer[0] = MECODE_START;\r\n    writebuffer[1] = len;\r\n    writebuffer[2] = MEPLAY_FILE_NAME;\r\n  \r\n    for (int k = 0; k < str_len+1; k++)\r\n    {\r\n      writebuffer[3 + k] = (uint8_t)temp[k];\r\n    }\r\n    writebuffer[len] = (uint8_t)checkSum(writebuffer, len);\r\n    writebuffer[len+1] = MECODE_END;\r\n  }\r\n\r\n  sendCmd(writebuffer, len + 2);\r\n  prevCmd_time = millis();\r\n}  \r\n/**\r\n * \\par Function\r\n *    pauseMusic\r\n * \\par Description\r\n *    pause mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::pauseMusic(void)\r\n{\r\n  uint8_t len = 0x03;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n  writebuffer[0] = MECODE_START;\r\n  writebuffer[1] = len;\r\n  writebuffer[2] = MEPAUSE_MUSIC;\r\n  writebuffer[3] = checkSum(writebuffer, len);\r\n  writebuffer[4] = MECODE_END;\r\n  sendCmd(writebuffer, 5);\r\n  prevCmd_time = millis();\r\n}\r\n/**\r\n * \\par Function\r\n *    stopMusic\r\n * \\par Description\r\n *    stop play mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::stopMusic(void)\r\n{\r\n\tuint8_t len = 0x03;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MESTOP_MUSIC;\r\n\twritebuffer[3] = checkSum(writebuffer, len);\r\n\twritebuffer[4] = MECODE_END;\r\n\tsendCmd(writebuffer, 5);\r\n  prevCmd_time = millis();\r\n}\r\n/**\r\n * \\par Function\r\n *    playNextMusic\r\n * \\par Description\r\n *    play next mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::playNextMusic(void)\r\n{\r\n\tuint8_t len = 0x03;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MEPLAY_NEXT;\r\n\twritebuffer[3] = checkSum(writebuffer, len);\r\n\twritebuffer[4] = MECODE_END;\r\n\tsendCmd(writebuffer, 5);\r\n  prevCmd_time = millis();\r\n}\r\n/**\r\n * \\par Function\r\n *    playPrevMusic\r\n * \\par Description\r\n *    play prev mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::playPrevMusic(void)\r\n{\r\n\tuint8_t len = 0x03;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MEPLAY_PREV;\r\n\twritebuffer[3] = checkSum(writebuffer, len);\r\n\twritebuffer[4] = MECODE_END;\r\n\tsendCmd(writebuffer, 5);\r\n  prevCmd_time = millis();\r\n}\r\n/**\r\n * \\par Function\r\n *    setMusicVolume\r\n * \\par Description\r\n *    set play Music Volume value\r\n * \\param[in]\r\n *    uint8_t vol(00~100),default:66\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::setMusicVolume(uint8_t vol)\r\n{\r\n\tuint8_t len = 0x04;\r\n  vol = (uint8_t)(vol * 0.24);\r\n\tif (vol > 24)\r\n\t{\r\n\t\tvol = 24;\r\n\t}\r\n\tif (vol < 0)\r\n\t{\r\n\t\tvol = 0;\r\n\t}\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MEVOLUME_CTL;\r\n\twritebuffer[3] = vol;\r\n\twritebuffer[4] = checkSum(writebuffer, len);\r\n\twritebuffer[5] = MECODE_END;\r\n\tsendCmd(writebuffer, 6);\r\n}\r\n/**\r\n * \\par Function\r\n *    setMusicPlayMode\r\n * \\par Description\r\n *    set play Music Play mode\r\n * \\param[in]\r\n *    uint8_t mode(00~04),\r\n *    00:Single non-loop playback mode(default)\r\n *    01:Single cycle play mode\r\n *    02:Repertoire loop mode\r\n *    03:Random mode\r\n *    04:Folder loop mode\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::setMusicPlayMode(uint8_t mode)\r\n{\r\n\tuint8_t len = 0x04;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n\tif (mode > 4)\r\n\t{\r\n\t\tmode = 0;\r\n\t}\r\n\tif (mode < 0)\r\n\t{\r\n\t\tmode = 0;\r\n\t}\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MESET_PLAY_MODE;\r\n\twritebuffer[3] = mode;\r\n\twritebuffer[4] = checkSum(writebuffer, len);\r\n\twritebuffer[5] = MECODE_END;\r\n\tsendCmd(writebuffer, 6);\r\n  prevCmd_time = millis();\r\n}\r\n\r\n/************************************************************\r\n\r\n\t\t\tRecoding Control Function\r\n*************************************************************/\r\n/**\r\n * \\par Function\r\n *    startRecodingFileName\r\n * \\par Description\r\n *    start Recoding a mucsic File and Name is\r\n * \\param[in]\r\n *    String str\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::startRecordingFileName(String str)\r\n{\r\n  uint8_t len = 0;\r\n  uint8_t str_len = 0;\r\n  uint8_t i = 0;\r\n  char temp[20];\r\n  char temp_ch;\r\n  str_len = str.length();\r\n\r\n  if (str_len > 20)\r\n  {\r\n    str_len = 20;   \r\n  }\r\n\r\n  for (int i = 0; i < str_len; i++)\r\n  {\r\n    temp_ch = str.charAt(i);\r\n    temp[i] = (temp_ch >= 'a' && temp_ch <= 'z') ? (temp_ch - 32) : temp_ch;  \r\n  }\r\n    \r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n  \r\n  len = str_len + 3;\r\n  writebuffer[0] = MECODE_START;\r\n  writebuffer[1] = len;\r\n  writebuffer[2] = MEFILE_NAME_RECORDING;\r\n  for (int k = 0; k < str_len+1; k++)\r\n  {\r\n    writebuffer[3 + k] = (uint8_t)temp[k];\r\n  }\r\n  writebuffer[len] = (uint8_t)checkSum(writebuffer, len);\r\n  writebuffer[len+1] = MECODE_END;\r\n  sendCmd(writebuffer, len + 2);\r\n  prevCmd_time = millis();\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *    stopRecodingFileName\r\n * \\par Description\r\n *    stop Recoding a mucsic File and Name is\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::stopRecording(void)\r\n{\r\n\tuint8_t len = 0x03;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MESTOP_RECORDING;\r\n\twritebuffer[3] = checkSum(writebuffer, len);\r\n\twritebuffer[4] = MECODE_END;\r\n\tsendCmd(writebuffer, 5);\r\n  prevCmd_time = millis();\r\n}\r\n/**\r\n * \\par Function\r\n *    deleteFileName\r\n * \\par Description\r\n *    delete a Recoding mucsic File and Name is\r\n * \\param[in]\r\n *    String str\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::deleteFileName(String str)\r\n{\r\n  uint8_t len = 0;\r\n  uint8_t str_len = 0;\r\n  uint8_t i = 0;\r\n  char temp[20];\r\n  char temp_ch;\r\n  str_len = str.length();\r\n\r\n  for (int i = 0; i < str_len; i++)\r\n  {\r\n    temp_ch = str.charAt(i);\r\n    temp[i] = (temp_ch >= 'a' && temp_ch <= 'z') ? (temp_ch - 32) : temp_ch;  \r\n  }\r\n    \r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n  \r\n  \r\n  len = str_len + 3;\r\n  writebuffer[0] = MECODE_START;\r\n  writebuffer[1] = len;\r\n  writebuffer[2] = MEDELETE_SPECIFY_FILE_NAME;\r\n\r\n  for (int k = 0; k < str_len+1; k++)\r\n  {\r\n    writebuffer[3 + k] = (uint8_t)temp[k];\r\n  }\r\n  writebuffer[len] = (uint8_t)checkSum(writebuffer, len);\r\n  writebuffer[len+1] = MECODE_END;\r\n\r\n  sendCmd(writebuffer, len + 2);\r\n  prevCmd_time = millis();\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *    deleteAllMusicFile\r\n * \\par Description\r\n *    delete all mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::deleteAllMusicFile(void)\r\n{\r\n\tuint8_t len = 0x03;\r\n  nextCmd_time = millis();\r\n  if (nextCmd_time - prevCmd_time < MAX_TIMEOUT)\r\n  {\r\n    delay( MAX_TIMEOUT - (nextCmd_time - prevCmd_time));\r\n  }\r\n\twritebuffer[0] = MECODE_START;\r\n\twritebuffer[1] = len;\r\n\twritebuffer[2] = MEDELETE_ALL;\r\n\twritebuffer[3] = checkSum(writebuffer, len);\r\n\twritebuffer[4] = MECODE_END;\r\n\tsendCmd(writebuffer, 5);\r\n  prevCmd_time = millis();\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *    volumeUp\r\n * \\par Description\r\n *    volume Up\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::volumeUp(void)\r\n{\r\n  uint8_t len = 0x03;\r\n  writebuffer[0] = MECODE_START;\r\n  writebuffer[1] = len;\r\n  writebuffer[2] = MESET_VOLUME_UP;\r\n  writebuffer[3] = checkSum(writebuffer, len);\r\n  writebuffer[4] = MECODE_END;\r\n  sendCmd(writebuffer, 5);\r\n}\r\n/**\r\n * \\par Function\r\n *    volumeDown\r\n * \\par Description\r\n *    volume Down\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid MeAudioPlayer::volumeDown(void)\r\n{\r\n  uint8_t len = 0x03;\r\n  writebuffer[0] = MECODE_START;\r\n  writebuffer[1] = len;\r\n  writebuffer[2] = MESET_VOLUME_DOWN;\r\n  writebuffer[3] = checkSum(writebuffer, len);\r\n  writebuffer[4] = MECODE_END;\r\n  sendCmd(writebuffer, 5);\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *   getFirmwareVersion\r\n * \\par Description\r\n *   Get Firmware Version.\r\n * \\param[in]\r\n *   None\r\n * \\par Output\r\n *   buffer: for storage version, length greater than 8\r\n * \\return\r\n *   None\r\n * \\par Others\r\n */\r\nvoid MeAudioPlayer::getFirmwareVersion(char *buffer)\r\n{\r\n  int16_t i = 0;\r\n  int8_t return_value = 0;\r\n  uint8_t reg = GET_VERSION_ADDR;\r\n\r\n  return_value = readData(reg, &i2cData[reg], 8);\r\n  \r\n  if(return_value == I2C_OK)\r\n  {\r\n\r\n    memcpy(buffer, &i2cData[reg], 8);\r\n  }\r\n  delay(2);\r\n}\r\n\r\n/**\r\n * \\par Function\r\n *   readData\r\n * \\par Description\r\n *   Write the data to i2c device.\r\n * \\param[in]\r\n *   start - the address which will write the data to.\r\n * \\param[in]\r\n *   pData - the head address of data array.\r\n * \\param[in]\r\n *   size - set the number of data will be written to the devide.\r\n * \\par Output\r\n *   None\r\n * \\return\r\n *   Return the error code.\r\n *   the definition of the value of variable return_value:\r\n *   0:success\r\n *   1:BUFFER_LENGTH is shorter than size\r\n *   2:address send, nack received\r\n *   3:data send, nack received\r\n *   4:other twi error\r\n *   refer to the arduino official library twi.c\r\n * \\par Others\r\n *   Calling the official i2c library to read data.\r\n */\r\nint8_t MeAudioPlayer::readData(uint8_t start, uint8_t *buffer, uint8_t size)\r\n{\r\n  int16_t i = 0;\r\n  int8_t return_value = 0;\r\n\r\n  Wire.beginTransmission(Device_Address);\r\n  return_value = Wire.write(start);\r\n  if(return_value != 1)\r\n  {\r\n    return(I2C_ERROR);\r\n  }\r\n  return_value = Wire.endTransmission(false);\r\n  if(return_value != 0)\r\n  {\r\n    return(return_value);\r\n  }\r\n  delayMicroseconds(1);\r\n  /* Third parameter is true: relase I2C-bus after data is read. */\r\n  Wire.requestFrom(Device_Address, size, (uint8_t)true);\r\n  while(Wire.available() && i < size)\r\n  {\r\n    buffer[i++] = Wire.read();\r\n\r\n  }\r\n  delayMicroseconds(1);\r\n  if(i != size)\r\n  {\r\n    return(I2C_ERROR);\r\n  }\r\n  return(0); //return: no error \r\n}\r\n"},{filename:"src/MeAudioPlayer.h",code:"/**\r\n * \\par Copyright (C), 2012-2017, MakeBlock\r\n * \\class   MeAudioPlayer\r\n * \\brief   Driver for MeAudioPlayer module.\r\n * @file    MeAudioPlayer.h\r\n * @author  MakeBlock\r\n * @version V1.0.0\r\n * @date    2017/11/17\r\n * @brief   Header for MeAudioPlayer.cpp module.\r\n *\r\n * \\par Copyright\r\n * This software is Copyright (C), 2012-2016, MakeBlock. Use is subject to license \\n\r\n * conditions. The main licensing options available are GPL V2 or Commercial: \\n\r\n *\r\n * \\par Open Source Licensing GPL V2\r\n * This is the appropriate option if you want to share the source code of your \\n\r\n * application with everyone you distribute it to, and you also want to give them \\n\r\n * the right to share who uses it. If you wish to use this software under Open \\n\r\n * Source Licensing, you must contribute all your source code to the open source \\n\r\n * community in accordance with the GPL Version 2 when your application is \\n\r\n * distributed. See http://www.gnu.org/copyleft/gpl.html\r\n *\r\n * \\par Description\r\n * This file is a drive for MeAudioPlayer module, It supports MeAudioPlayer V1.0 device provided\r\n * by MakeBlock.\r\n *\r\n * \\par Method List:\r\n *\r\n * \r\n/*\r\n *   void MeAudioPlayer::PlayerInit(void)\r\n *   void MeAudioPlayer::playMusicFileIndex(uint16_t music_index);\r\n *   void MeAudioPlayer::playMusicFileName(String str);  \r\n *   void MeAudioPlayer::pauseMusic(void);\r\n *   void MeAudioPlayer::stopMusic(void);\r\n *   void MeAudioPlayer::playNextMusic(void);\r\n *   void MeAudioPlayer::playPrevMusic(void);\r\n *   void MeAudioPlayer::setMusicVolume(uint8_t vol);\r\n *   void MeAudioPlayer::setMusicPlayMode(uint8_t mode);\r\n *   void MeAudioPlayer::startRecordingFileName(String str);\r\n *   void MeAudioPlayer::stopRecording(void);\r\n *   void MeAudioPlayer::volumeUp(void);\r\n *   void MeAudioPlayer::volumeDown(void);\r\n *   void MeAudioPlayer::deleteFileName(String str);\r\n *   void MeAudioPlayer::deleteAllMusicFile(void);\r\n\r\n*/\r\n/*\r\n * \r\n * \\par History:\r\n * <pre>\r\n * \"<Author>\"         \"<Time>\"        \"<Version>\"        \"<Descr>\"\r\n *  Lanweiting      2017/11/15          1.0.0         Build the files.\r\n * </pre>\r\n *\r\n */\r\n\r\n/* Define to prevent recursive inclusion -------------------------------------*/\r\n#ifndef _MeAudioPlayer_H_\r\n#define _MeAudioPlayer_H_\r\n\r\n/* Includes ------------------------------------------------------------------*/\r\n#include <stdint.h>\r\n#include <stdbool.h>\r\n#include <Arduino.h>\r\n\r\n#include \"MeConfig.h\"\r\n\r\n #ifdef ME_PORT_DEFINED\r\n#include \"MePort.h\"\r\n #endif // ME_PORT_DEFINED\r\n\r\n\r\n/* Exported macro ------------------------------------------------------------*/\r\n#define I2C_OK                          (0)\r\n#define I2C_ERROR                       (-1)\r\n#define AUDIOPLAYER_DEFAULT_ADDRESS     (0x2B)//\r\n\r\n/* Communication Control CMD------------------------------------------------------------*/\r\n#define MEPLAY_FILE_INDEX               0xA2\r\n#define MEPLAY_FILE_NAME                0xA3\r\n#define MEPAUSE_MUSIC                   0xAA\r\n#define MESTOP_MUSIC                    0xAB\r\n#define MEPLAY_NEXT                     0xAC\r\n#define MEPLAY_PREV                     0xAD\r\n#define MEVOLUME_CTL                    0xAE\r\n#define MESET_PLAY_MODE                 0xAF\r\n#define MEMEMORY_SELECT                 0xD2\r\n\r\n#define MEFILE_NAME_RECORDING           0xD6\r\n#define MESTOP_RECORDING                0xD9\r\n#define MEDELETE_SPECIFY_FILE_NAME      0xDB\r\n#define MEDELETE_ALL                    0xDE\r\n\r\n#define MECODE_START                    0x7E\r\n#define MECODE_END                      0xEF\r\n\r\n/* Music Mode Control CMD------------------------------------------------------------*/\r\n#define SINGLE_NON_CYCLE                0x00\r\n#define SINGLE_CYCLE                    0x01\r\n#define ALL_CYCLE                       0x02\r\n#define RANDOM_PLAY                     0x03\r\n#define FOLDER_CYCLE                    0x04\r\n/* Memory Mode Control CMD------------------------------------------------------------*/\r\n#define DEFAULT_MEMORY                  0x00\r\n#define EXTERNAL_MEMORY                 0x01\r\n\r\n#define MESET_VOLUME_UP                 0xEA\r\n#define MESET_VOLUME_DOWN               0xEB\r\n#define MEGET_VERSION                   0xEC\r\n//IIC Register Address\r\n#define GET_VERSION_ADDR                0x01\r\n\r\n#define MAX_TIMEOUT                     100L\r\n\r\n/*\r\n * Class: MeAudioPlayer\r\n * \\par Description\r\n * Declaration of Class MeAudioPlayer\r\n */\r\n\r\n#ifndef ME_PORT_DEFINED\r\nclass MeAudioPlayer\r\n#else // !ME_PORT_DEFINED\r\n  class MeAudioPlayer : public MePort\r\n#endif // !ME_PORT_DEFINED\r\n{\r\npublic:\r\n#ifdef ME_PORT_DEFINED\r\n/**\r\n * Alternate Constructor which can call your own function to map the MeAudioPlayer to arduino port,\r\n * no pins are used or initialized here\r\n */\r\n  MeAudioPlayer(void);\r\n\r\n/**\r\n * Alternate Constructor which can call your own function to map the MeAudioPlayer to arduino port.\r\n * \\param[in]\r\n *   port - RJ25 port number\r\n */\r\n  MeAudioPlayer(uint8_t port);\r\n  /**\r\n * Alternate Constructor which can call your own function to map the MeAudioPlayer to arduino port\r\n * and change the i2c device address\r\n * \\param[in]\r\n *   port - RJ25 port number\r\n * \\param[in]\r\n *   address - the i2c address you want to set\r\n */ \r\n  MeAudioPlayer(uint8_t port, uint8_t address);\r\n#else // ME_PORT_DEFINED\r\n/**\r\n * Alternate Constructor which can call your own function to map the _AD0 and _INT to arduino port,\r\n * \\param[in]\r\n *   _AD0 - arduino gpio number\r\n * \\param[in]\r\n *   _INT - arduino gpio number\r\n */\r\n  MeAudioPlayer(uint8_t _AD0, uint8_t _INT);\r\n\r\n#endif  /* ME_PORT_DEFINED */\r\n/**\r\n * \\par Function\r\n *   PlayerInit\r\n * \\par Description\r\n *   Initialize the MeAudioPlayer.\r\n * \\param[in]\r\n *   None\r\n * \\par Output\r\n *   None\r\n * \\return\r\n *   None\r\n * \\par Others\r\n *   None\r\n */\r\n  void PlayerInit(void);\r\n\r\n/**\r\n * \\par Function\r\n *    sendData\r\n * \\par Description\r\n *    send the datas to serial com.\r\n * \\param[in]\r\n *    data pionter,len\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid sendCmd(uint8_t *sendcmd, uint8_t len);\r\n/**\r\n * \\par Function\r\n *    checkSum\r\n * \\par Description\r\n *    return check And result\r\n * \\param[in]\r\n *    data pionter,len\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nuint8_t checkSum(uint8_t* buffer, uint8_t len);\r\n/************************************************************\r\n\r\n      Playing Music Control Function\r\n\r\n*************************************************************/\r\n/**\r\n * \\par Function\r\n *    playMusicFileIndex\r\n * \\par Description\r\n *    play a mucsic File with it index on root\r\n * \\param[in]\r\n *    uint16_t index\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid playMusicFileIndex(uint16_t music_index);\r\n\r\n/**\r\n * \\par Function\r\n *    playMusicFileName\r\n * \\par Description\r\n *    play a mucsic File with it name\r\n * \\param[in]\r\n *    char str[]\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid playMusicFileName(String str);\r\n/**\r\n * \\par Function\r\n *    pauseMusic\r\n * \\par Description\r\n *    pause mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid pauseMusic(void);\r\n/**\r\n * \\par Function\r\n *    stopMusic\r\n * \\par Description\r\n *    stop play mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid stopMusic(void);\r\n/**\r\n * \\par Function\r\n *    playNextMusic\r\n * \\par Description\r\n *    play next mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid playNextMusic(void);\r\n/**\r\n * \\par Function\r\n *    playPrevMusic\r\n * \\par Description\r\n *    play prev mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid playPrevMusic(void);\r\n/**\r\n * \\par Function\r\n *    setMusicVolume\r\n * \\par Description\r\n *    set play Music Volume value\r\n * \\param[in]\r\n *    uint8_t vol(00~100),default:66\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid setMusicVolume(uint8_t vol);\r\n/**\r\n * \\par Function\r\n *    setMusicPlayMode\r\n * \\par Description\r\n *    set play Music Play mode\r\n * \\param[in]\r\n *    uint8_t mode(00~04),\r\n *    00:Single non-loop playback mode(default)\r\n *    01:Single cycle play mode\r\n *    02:Repertoire loop mode\r\n *    03:Random mode\r\n *    04:Folder loop mode\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid setMusicPlayMode(uint8_t mode);\r\n\r\n/************************************************************\r\n\r\n      Recoding Control Function\r\n\r\n*************************************************************/\r\n/**\r\n * \\par Function\r\n *    startRecodingFileName\r\n * \\par Description\r\n *    start Recoding a mucsic File and Name is\r\n * \\param[in]\r\n *    char str[]\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid startRecordingFileName(String str);\r\n/**\r\n * \\par Function\r\n *    stopRecodingFileName\r\n * \\par Description\r\n *    stop Recoding a mucsic File and Name is\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid stopRecording(void);\r\n/**\r\n * \\par Function\r\n *    deleteFileName\r\n * \\par Description\r\n *    delete a Recoding mucsic File and Name is\r\n * \\param[in]\r\n *    char str[]\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid deleteFileName(String str);\r\n/**\r\n * \\par Function\r\n *    deleteAllMusicFile\r\n * \\par Description\r\n *    delete all mucsic File\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid deleteAllMusicFile(void);\r\n/**\r\n * \\par Function\r\n *    volumeUp\r\n * \\par Description\r\n *    volume Up\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid volumeUp(void);\r\n/**\r\n * \\par Function\r\n *    volumeDown\r\n * \\par Description\r\n *    volume Down\r\n * \\param[in]\r\n *    None\r\n * \\par Output\r\n *    None\r\n * \\par Return\r\n *    None\r\n * \\par Others\r\n *    None\r\n */\r\nvoid volumeDown(void);\r\n/**\r\n * \\par Function\r\n *   getFirmwareVersion\r\n * \\par Description\r\n *   Get Firmware Version.\r\n * \\param[in]\r\n *   None\r\n * \\par Output\r\n *   buffer: for storage version, length greater than 8\r\n * \\return\r\n *   None\r\n * \\par Others\r\n */\r\nvoid getFirmwareVersion(char *buffer);\r\n/**\r\n * \\par Function\r\n *   readData\r\n * \\par Description\r\n *   Write the data to i2c device.\r\n * \\param[in]\r\n *   start - the address which will write the data to.\r\n * \\param[in]\r\n *   pData - the head address of data array.\r\n * \\param[in]\r\n *   size - set the number of data will be written to the devide.\r\n * \\par Output\r\n *   None\r\n * \\return\r\n *   Return the error code.\r\n *   the definition of the value of variable return_value:\r\n *   0:success\r\n *   1:BUFFER_LENGTH is shorter than size\r\n *   2:address send, nack received\r\n *   3:data send, nack received\r\n *   4:other twi error\r\n *   refer to the arduino official library twi.c\r\n * \\par Others\r\n *   Calling the official i2c library to read data.\r\n */\r\nint8_t readData(uint8_t start, uint8_t *buffer, uint8_t size);\r\nuint8_t Device_Address;\r\n\r\nprivate:\r\n  volatile uint8_t  _S1;\r\n  volatile uint8_t  _S2;\r\n  volatile uint8_t  _AD0;\r\n  volatile uint8_t  _INT;\r\n  uint8_t i2cData[10];\r\n  // uint8_t readbuffer[27];\r\n  uint8_t writebuffer[27];\r\n  uint32_t nextCmd_time;\r\n  uint32_t prevCmd_time;\r\n};\r\n#endif\r\n\r\n"}]},f={onLoad:function onLoad(e,a){c(a.isUploadMode()?"upload":"debug",e,a)},onUnload:function onUnload(){},onConnect:function onConnect(){},onDisconnect:function onDisconnect(){},onStopAll:function onStopAll(){},beforeChangeUploadMode:function beforeChangeUploadMode(){return d(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",!0);case 1:case"end":return e.stop();}},e)}))()},beforeChangeDebugMode:function beforeChangeDebugMode(){return d(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",!0);case 1:case"end":return e.stop();}},e)}))()},afterChangeUploadMode:function afterChangeUploadMode(e,a){return c("upload",e,a),!0},afterChangeDebugMode:function afterChangeDebugMode(e,a){return c("debug",e,a),!0},onSelect:function onSelect(e,a){setTimeout(function(){c(a.isUploadMode()?"upload":"debug",e,a)},0)},onUnselect:function onUnselect(e,a){c("",e,a)},beforeCodeUpload:function beforeCodeUpload(){},afterCodeUpload:function afterCodeUpload(){},onRead:function onRead(e,a){a.setTextDecoder("utf8"),e.log(a.readText())},onSignIn:function onSignIn(){},onSignOut:function onSignOut(){}},P=function(){function e(){o(this,e),this.checkFirmwareInForce="undefined"!=typeof checkFirmwareInForce&&checkFirmwareInForce,this.funcs={audioplayer_init:{onRun:function onRun(){}},audioplayerPlayBySnCodesCode:function audioplayerPlayBySnCodesCode(e){return"None"==e.FILE_SN?e.FILE_SN=0:0>+e.FILE_SN&&(e.FILE_SN=0),"\nmeAudioPlayer.playMusicFileIndex(".concat(e.FILE_SN,");\n_delay(0.1);")},audioplayer_play_by_sn:{onRun:function onRun(){}},audioplayer_play_by_name:{onRun:function onRun(){}},audioplayer_set_play_mode:{onRun:function onRun(){}},audioplayer_play_previous:{onRun:function onRun(){}},audioplayer_play_next:{onRun:function onRun(){}},audioplayer_pause:{onRun:function onRun(){}},audioplayer_stop:{onRun:function onRun(){}},audioplayerSetVolumeCodesCode:function audioplayerSetVolumeCodesCode(e){return"None"==e.VOLUME?e.VOLUME=0:0>+e.VOLUME?e.VOLUME=0:100<+e.VOLUME&&(e.VOLUME=100),"\nmeAudioPlayer.setMusicVolume(".concat(e.VOLUME,");\n_delay(0.1);")},audioplayer_set_volume:{onRun:function onRun(){}},audioplayer_volume_up:{onRun:function onRun(){}},audioplayer_volume_down:{onRun:function onRun(){}},audioplayer_record:{onRun:function onRun(){}},audioplayer_record_stop:{onRun:function onRun(){}}}}return r(e,[{key:"getInfo",value:function getInfo(){return{id:"audio_player_rj25",targets:[{name:"auriga",options:{upload:{middlewares:[{name:"arduino",params:{sources:M.arduino}}]}}},{name:"mcore",options:{upload:{middlewares:[{name:"arduino",params:{sources:M.arduino}}]}}},{name:"megapipro",options:{upload:{middlewares:[{name:"arduino",params:{sources:M.arduino}}]}}},{name:"megapi",options:{upload:{middlewares:[{name:"arduino",params:{sources:M.arduino}}]}}},{name:"orion",options:{upload:{middlewares:[{name:"arduino",params:{sources:M.arduino}}]}}}],codeTypes:["arduinoc"],version:"1.0.5",platform:["mblockpc","mblockweb"],categories:[{name:"audio_player_rj25",colors:["#9013FE","#8301F5","#7401D9"],menuIconURI:"",blockIcon:null,blocks:[{opcode:"audioplayer_init",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{sections:{include:["\"src/MeAudioPlayer.h\""],lib:"MeAudioPlayer meAudioPlayer(0);",setup:"meAudioPlayer.PlayerInit();\r\n_delay(0.1);"}}},handler:this.funcs.audioplayer_init},{opcode:"audioplayer_play_by_sn",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{FILE_SN:{type:"number",defaultValue:1}},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:this.funcs.audioplayerPlayBySnCodesCode,sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_play_by_sn},{opcode:"audioplayer_play_by_name",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:36,arguments:{FILE_NAME:{type:"string",defaultValue:"T001"}},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.playMusicFileName(String(/*{FILE_NAME}*/));\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_play_by_name},{opcode:"audioplayer_set_play_mode",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{PLAY_MODE:{type:"fieldMenu",defaultValue:"0",menu:"AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE"}},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.setMusicPlayMode(/*{PLAY_MODE}*/);\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_set_play_mode},{opcode:"audioplayer_play_previous",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.playPrevMusic();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_play_previous},{opcode:"audioplayer_play_next",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.playNextMusic();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_play_next},{opcode:"audioplayer_pause",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.pauseMusic();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_pause},{opcode:"audioplayer_stop",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:36,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.stopMusic();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_stop},{opcode:"audioplayer_set_volume",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{VOLUME:{type:"number",defaultValue:50}},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:this.funcs.audioplayerSetVolumeCodesCode,sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_set_volume},{opcode:"audioplayer_volume_up",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.volumeUp();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_volume_up},{opcode:"audioplayer_volume_down",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:36,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.volumeDown();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_volume_down},{opcode:"audioplayer_record",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{FILE_NAME:{type:"string",defaultValue:"T001"}},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.startRecordingFileName(String(/*{FILE_NAME}*/));\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_record},{opcode:"audioplayer_record_stop",blockType:"command",checkboxInFlyout:!1,hidden:!1,gap:12,arguments:{},branchCount:0,platform:["mblockpc","mblockweb"],codes:{arduinoc:{code:"meAudioPlayer.stopRecording();\r\n_delay(0.1);",sections:{include:["\"src/MeAudioPlayer.h\""]}}},handler:this.funcs.audioplayer_record_stop}],menus:{AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE:[{text:"AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_0",value:"0"},{text:"AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_1",value:"1"},{text:"AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_2",value:"2"},{text:"AUDIOPLAYER_SET_PLAY_MODE_PLAY_MODE_3",value:"3"}]}}],generators:A,translationMap:m,snippets:E,excludeBlocks:["event_whenthisspriteclicked","control_create_clone_of","event_whenbackdropswitchesto","control_delete_this_clone","event_whengreaterthan","control_start_as_clone"],generatorStartBlocks:[],feature:[]}}},{key:"getHandler",value:function getHandler(){return"object"===p(f)?f:"function"==typeof f?new f:void 0}}]),e}();e.default=P});