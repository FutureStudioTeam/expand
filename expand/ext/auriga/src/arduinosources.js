export default [
    "{ filename: \"src/MeEncoderMotorDriverV2.cpp\", code: \"/**\\r\\n * \\\\par Copyright (C), 2012-2016, MakeBlock\\r\\n * \\\\class   MeEncoderMotorDriverV2\\r\\n * \\\\brief   Driver for Encoder module.\\r\\n * @file    MeEncoderMotorDriverV2.cpp\\r\\n * @author  MakeBlock\\r\\n * @version V1.0.0\\r\\n * @date    2017/11/17\\r\\n * @brief   Driver for Encoder module.\\r\\n *\\r\\n * \\\\par Copyright\\r\\n * This software is Copyright (C), 2012-2016, MakeBlock. Use is subject to license \\\\n\\r\\n * conditions. The main licensing options available are GPL V2 or Commercial: \\\\n\\r\\n *\\r\\n * \\\\par Open Source Licensing GPL V2\\r\\n * This is the appropriate option if you want to share the source code of your \\\\n\\r\\n * application with everyone you distribute it to, and you also want to give them \\\\n\\r\\n * the right to share who uses it. If you wish to use this software under Open \\\\n\\r\\n * Source Licensing, you must contribute all your source code to the open source \\\\n\\r\\n * community in accordance with the GPL Version 2 when your application is \\\\n\\r\\n * distributed. See http://www.gnu.org/copyleft/gpl.html\\r\\n *\\r\\n * \\\\par Description\\r\\n * This file is a drive for Encoder.\\r\\n *\\r\\n * \\\\par Method List:\\r\\n *\\r\\n *    1. void MeEncoderMotorDriverV2::pwmMove(uint8_t slot);\\r\\n *\\r\\n * \\\\par History:\\r\\n * <pre>\\r\\n * \\\"<Author>\\\"         \\\"<Time>\\\"        \\\"<Version>\\\"        \\\"<Descr>\\\"\\r\\n * Payton         2017/12/20     1.0.0            Add description\\r\\n * </pre>\\r\\n *\\r\\n */\\r\\n\\r\\n#include \\\"MeEncoderMotorDriverV2.h\\\"\\r\\n\\r\\n\\r\\n/**\\r\\n * Alternate Constructor which can call your own function to map the Encoder Motor New to arduino port,\\r\\n * you can set any slot for the Encoder Motor New device. \\r\\n * \\\\param[in]\\r\\n *   port - RJ25 port from PORT_1 to PORT_10\\r\\n * \\\\param[in]\\r\\n *   slot - SLOT1 or SLOT2\\r\\n */\\r\\nMeEncoderMotorDriverV2::MeEncoderMotorDriverV2(uint8_t addr,uint8_t slot) : MeEncoderNew(addr,slot)\\r\\n{\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alternate Constructor which can call your own function to map the Encoder Motor New to arduino port,\\r\\n * you can set any slot for the Encoder Motor New device.\\r\\n * \\\\param[in]\\r\\n *   slot - SLOT1 or SLOT2\\r\\n */\\r\\nMeEncoderMotorDriverV2::MeEncoderMotorDriverV2(uint8_t slot) : MeEncoderNew(slot)\\r\\n{\\r\\n\\r\\n}\\r\\n\\r\\n/**\\r\\n * Alternate Constructor which can call your own function to map the Encoder Motor New to arduino port,\\r\\n * you should initialized slot and slaveAddress here for the Encoder Motor New device.\\r\\n * \\\\param[in]\\r\\n *   None\\r\\n */\\r\\nMeEncoderMotorDriverV2::MeEncoderMotorDriverV2(void) : MeEncoderNew()\\r\\n{\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\" }",
    "{ filename: \"src/MeEncoderMotorDriverV2.h\", code: \"/**\\r\\n * \\\\par Copyright (C), 2012-2016, MakeBlock\\r\\n * \\\\class   MeEncoderMotorDriverV2\\r\\n * \\\\brief   Driver for Encoder module.\\r\\n * @file    MeEncoderMotorDriverV2.h\\r\\n * @author  MakeBlock\\r\\n * @version V1.0.0\\r\\n * @date    2017/11/17\\r\\n * @brief   Header for MeEncoderMotorDriverV2.cpp module\\r\\n *\\r\\n * \\\\par Copyright\\r\\n * This software is Copyright (C), 2012-2016, MakeBlock. Use is subject to license \\\\n\\r\\n * conditions. The main licensing options available are GPL V2 or Commercial: \\\\n\\r\\n *\\r\\n * \\\\par Open Source Licensing GPL V2\\r\\n * This is the appropriate option if you want to share the source code of your \\\\n\\r\\n * application with everyone you distribute it to, and you also want to give them \\\\n\\r\\n * the right to share who uses it. If you wish to use this software under Open \\\\n\\r\\n * Source Licensing, you must contribute all your source code to the open source \\\\n\\r\\n * community in accordance with the GPL Version 2 when your application is \\\\n\\r\\n * distributed. See http://www.gnu.org/copyleft/gpl.html\\r\\n *\\r\\n * \\\\par Description\\r\\n * This file is a drive for Encoder.\\r\\n *\\r\\n * \\\\par Method List:\\r\\n *\\r\\n * \\\\par History:\\r\\n * <pre>\\r\\n * \\\"<Author>\\\"         \\\"<Time>\\\"        \\\"<Version>\\\"        \\\"<Descr>\\\"\\r\\n * Payton        2017/12/20     1.0.0            Build New\\r\\n * </pre>\\r\\n */\\r\\n\\r\\n#ifndef ME_Encoder_NEW_TEST_H\\r\\n#define ME_Encoder_NEW_TEST_H\\r\\n\\r\\n#include <Arduino.h>\\r\\n#include <stdbool.h>\\r\\n#include <avr/interrupt.h>\\r\\n#include <MeEncoderNew.h>\\r\\n\\r\\n\\r\\n/**\\r\\n * Class: MeEncoderMotorDriverV2\\r\\n * \\\\par Description\\r\\n * Declaration of Class MeEncoderMotorDriverV2\\r\\n */\\r\\nclass MeEncoderMotorDriverV2 : public MeEncoderNew\\r\\n{\\r\\npublic:\\r\\n/**\\r\\n * Alternate Constructor which can call your own function to map the Encoder Motor New to arduino port,\\r\\n * you can set any slot for the Encoder Motor New device. \\r\\n * \\\\param[in]\\r\\n *   port - RJ25 port from PORT_1 to PORT_10\\r\\n * \\\\param[in]\\r\\n *   slot - SLOT1 or SLOT2\\r\\n */\\r\\n  MeEncoderMotorDriverV2(uint8_t addr,uint8_t slot);\\r\\n\\r\\n/**\\r\\n * Alternate Constructor which can call your own function to map the Encoder Motor New to arduino port,\\r\\n * you can set any slot for the Encoder Motor New device.\\r\\n * \\\\param[in]\\r\\n *   slot - SLOT1 or SLOT2\\r\\n */\\r\\n  MeEncoderMotorDriverV2(uint8_t slot);\\r\\n\\r\\n/**\\r\\n * Alternate Constructor which can call your own function to map the Encoder Motor New to arduino port,\\r\\n * you should initialized slot and slaveAddress here for the Encoder Motor New device.\\r\\n * \\\\param[in]\\r\\n *   None\\r\\n */\\r\\n  MeEncoderMotorDriverV2(void);\\r\\n\\r\\n\\r\\nprivate:\\r\\n  uint8_t _mode;\\r\\n\\r\\n};\\r\\n#endif\\r\\n\\r\\n\\r\\n\\r\\n\" }"
];